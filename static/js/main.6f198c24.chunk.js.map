{"version":3,"sources":["Pages/Authorization.js","Followers.png","App.js","reportWebVitals.js","index.js"],"names":["client_id","urlEndPoint","redirect_uri","SCOPES_URL_PARAM","join","AuthButton","console","log","useEffect","window","location","hash","substring","split","reduce","accumulater","currentValue","key","value","access_token","expires_in","token_type","localStorage","setItem","Date","getTime","origin","className","onClick","url","handleAuth","App","useState","accessTime","setaccessTime","expiresIn","Number","getItem","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAEMA,EAAS,mCACTC,EAAc,yCACdC,EAAe,sDAGfC,EADS,CAAC,wBAAyB,oBAAqB,iBAC9BC,KAFR,OAmDTC,MAnCf,WA2BE,OAzBAC,QAAQC,IAAR,UAAeN,EAAf,sBAAwCD,EAAxC,yBAAkEE,EAAlE,kBAAwFC,EAAxF,0CAGAK,qBAAU,WACR,GAAIC,OAAOC,SAASC,KAAM,CACxB,MACmCF,OAAOC,SAASC,KAnBvBC,UAAU,GACHC,MAAM,KACXC,QAAO,SAACC,EAAaC,GACrD,MAAqBA,EAAaH,MAAM,KAAxC,mBAAOI,EAAP,KAAYC,EAAZ,KAEA,OADAH,EAAYE,GAAOC,EACZH,IACN,IAYSI,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,WAGlCC,aAAaC,QAAQ,cAAeJ,GACpCG,aAAaC,QAAQ,YAAaF,GAClCC,aAAaC,QAAQ,aAAa,IAAIC,MAAOC,UAAkC,KAApBL,EAAa,MAExEd,QAAQC,IAAIE,OAAOiB,QAEnBjB,OAAOC,SAAW,0DAYpB,sBAAKiB,UAAU,QAAf,UACE,iFACA,wBAAQA,UAAU,YAAYC,QAAS,kBAV3C,WAEE,IAAIC,EAAG,UAAM5B,EAAN,sBAA+BD,EAA/B,yBAAyDE,EAAzD,kBAA+EC,EAA/E,yCAEPM,OAAOC,SAAWmB,EAM6BC,IAA7C,kCCnDS,I,wBC4BAC,MArBf,WAEE,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAUA,OARA1B,qBAAU,WACR,IAAI2B,EAAY,IAAIX,KAAKY,OAAOd,aAAae,QAAQ,eACrD/B,QAAQC,IAAI,IAAIiB,KAASW,GACrB,IAAIX,KAASW,GACfD,GAAc,MAKhB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOI,KAAK,IAAIC,QAASN,EAAa,uCAAkB,cAAC,EAAD,WCVjDO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f198c24.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst client_id = `8388f4a4228342fa9111a25e71147bdd`\r\nconst urlEndPoint = 'https://accounts.spotify.com/authorize'\r\nconst redirect_uri = 'https://malthemester.github.io/spotify-stat-viewer/'\r\nconst SPACE_DELIMITER = \"%20\";\r\nconst SCOPES = [\"playlist-read-private\", \"user-read-private\", \"user-top-read\"];\r\nconst SCOPES_URL_PARAM = SCOPES.join(SPACE_DELIMITER);\r\n\r\nconst getReturnedParamsFromSpotifyAuth = (hash) => {\r\n  const stringAfterHashtag = hash.substring(1);\r\n  const paramsInUrl = stringAfterHashtag.split(\"&\");\r\n  const paramsSplitUp = paramsInUrl.reduce((accumulater, currentValue) => {\r\n    const [key, value] = currentValue.split(\"=\");\r\n    accumulater[key] = value;\r\n    return accumulater;\r\n  }, {});\r\n\r\n  return paramsSplitUp;\r\n};\r\n\r\nfunction AuthButton() {\r\n\r\n  console.log(`${urlEndPoint}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`)\r\n\r\n\r\n  useEffect(() => {\r\n    if (window.location.hash) {\r\n      const { access_token, expires_in, token_type } =\r\n        getReturnedParamsFromSpotifyAuth(window.location.hash);\r\n\r\n      localStorage.setItem(\"accessToken\", access_token);\r\n      localStorage.setItem(\"tokenType\", token_type);\r\n      localStorage.setItem(\"expiresIn\", new Date().getTime() + ((expires_in - 300) * 1000))\r\n\r\n      console.log(window.origin)\r\n\r\n      window.location = \"https://malthemester.github.io/spotify-stat-viewer/\"\r\n    }\r\n  });\r\n\r\n  function handleAuth() {\r\n\r\n    let url = `${urlEndPoint}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`\r\n\r\n    window.location = url\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>You need to login to Spotify to view your stats</h1>\r\n      <button className=\"button-33\" onClick={() => handleAuth()} >Login to spotify</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthButton;\r\n","export default __webpack_public_path__ + \"static/media/Followers.1e8b3e63.png\";","import { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Authenticate from './Pages/Authorization'\r\nimport DisplayStats from './Pages/DisplayStats'\r\n\r\nfunction App() {\r\n\r\n  const [accessTime, setaccessTime] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let expiresIn = new Date(Number(localStorage.getItem(\"expiresIn\")))\r\n    console.log(new Date() < expiresIn)\r\n    if (new Date() < expiresIn) {\r\n      setaccessTime(true)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path='*' element={accessTime ? <div>This</div> : <Authenticate />} />\r\n      </Routes>\r\n    </Router >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}