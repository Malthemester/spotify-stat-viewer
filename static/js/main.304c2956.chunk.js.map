{"version":3,"sources":["Pages/Authorization.js","Followers.png","Pages/DisplayStats.js","App.js","reportWebVitals.js","index.js"],"names":["client_id","urlEndPoint","redirect_uri","SCOPES_URL_PARAM","join","AuthButton","console","log","useEffect","window","location","hash","substring","split","reduce","accumulater","currentValue","key","value","access_token","expires_in","token_type","localStorage","setItem","Date","getTime","origin","className","onClick","url","handleAuth","Stats","useState","image","setImage","userName","setUserName","followers","setFollowers","getItem","fetch","headers","Authorization","then","response","json","data","display_name","total","images","catch","error","alt","src","followersImg","App","accessTime","setaccessTime","expiresIn","Number","DisplayStats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAEMA,EAAS,mCACTC,EAAc,yCACdC,EAAe,sDAGfC,EADS,CAAC,wBAAyB,oBAAqB,iBAC9BC,KAFR,OAmDTC,MAnCf,WA2BE,OAzBAC,QAAQC,IAAR,UAAeN,EAAf,sBAAwCD,EAAxC,yBAAkEE,EAAlE,kBAAwFC,EAAxF,0CAGAK,qBAAU,WACR,GAAIC,OAAOC,SAASC,KAAM,CACxB,MACmCF,OAAOC,SAASC,KAnBvBC,UAAU,GACHC,MAAM,KACXC,QAAO,SAACC,EAAaC,GACrD,MAAqBA,EAAaH,MAAM,KAAxC,mBAAOI,EAAP,KAAYC,EAAZ,KAEA,OADAH,EAAYE,GAAOC,EACZH,IACN,IAYSI,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,WAGlCC,aAAaC,QAAQ,cAAeJ,GACpCG,aAAaC,QAAQ,YAAaF,GAClCC,aAAaC,QAAQ,aAAa,IAAIC,MAAOC,UAAkC,KAApBL,EAAa,MAExEd,QAAQC,IAAIE,OAAOiB,QAEnBjB,OAAOC,SAAW,0DAYpB,sBAAKiB,UAAU,QAAf,UACE,iFACA,wBAAQA,UAAU,YAAYC,QAAS,kBAV3C,WAEE,IAAIC,EAAG,UAAM5B,EAAN,sBAA+BD,EAA/B,yBAAyDE,EAAzD,kBAA+EC,EAA/E,yCAEPM,OAAOC,SAAWmB,EAM6BC,IAA7C,kCCnDS,MAA0B,sC,wBCiD1BC,MA3Cf,WACI,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,iBAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAyBA,OAvBAhC,QAAQC,IAAI,OAEZC,qBAAU,WACN,IAAIW,EAAeG,aAAaiB,QAAQ,eACxCjC,QAAQC,IAAI,SACZiC,MAZY,gCAYO,CACfC,QAAS,CACLC,cAAe,UAAYvB,EAC3B,eAAgB,sBAGnBwB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFxC,QAAQC,IAAIuC,GACZV,EAAYU,EAAKC,cACjBT,EAAaQ,EAAKT,UAAUW,OAC5Bd,EAASY,EAAKG,OAAO,GAAGpB,QAE3BqB,OAAM,SAACC,GACJ7C,QAAQC,IAAI4C,QAErB,IAGC,8BACI,sBAAKxB,UAAU,SAAf,UACI,qBAAKyB,IAAI,UAAUzB,UAAU,YAAY0B,IAAKpB,IAC9C,6BAAKE,IACL,qBAAKiB,IAAI,aAAazB,UAAU,gBAAgB0B,IAAKC,IACrD,mBAAG3B,UAAU,eAAb,SAA6BU,UCP9BkB,MA1Bf,WAEE,MAAoCvB,oBAAS,GAA7C,mBAAOwB,EAAP,KAAmBC,EAAnB,KAUA,OARAjD,qBAAU,WACR,IAAIkD,EAAY,IAAIlC,KAAKmC,OAAOrC,aAAaiB,QAAQ,eACrDjC,QAAQC,IAAI,IAAIiB,KAASkC,GACrB,IAAIlC,KAASkC,GACfD,GAAc,KAEf,IAID,8BACGD,EAAa,cAACI,EAAD,IAAmB,cAAC,EAAD,OCVxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.304c2956.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst client_id = `8388f4a4228342fa9111a25e71147bdd`\r\nconst urlEndPoint = 'https://accounts.spotify.com/authorize'\r\nconst redirect_uri = 'https://malthemester.github.io/spotify-stat-viewer/'\r\nconst SPACE_DELIMITER = \"%20\";\r\nconst SCOPES = [\"playlist-read-private\", \"user-read-private\", \"user-top-read\"];\r\nconst SCOPES_URL_PARAM = SCOPES.join(SPACE_DELIMITER);\r\n\r\nconst getReturnedParamsFromSpotifyAuth = (hash) => {\r\n  const stringAfterHashtag = hash.substring(1);\r\n  const paramsInUrl = stringAfterHashtag.split(\"&\");\r\n  const paramsSplitUp = paramsInUrl.reduce((accumulater, currentValue) => {\r\n    const [key, value] = currentValue.split(\"=\");\r\n    accumulater[key] = value;\r\n    return accumulater;\r\n  }, {});\r\n\r\n  return paramsSplitUp;\r\n};\r\n\r\nfunction AuthButton() {\r\n\r\n  console.log(`${urlEndPoint}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`)\r\n\r\n\r\n  useEffect(() => {\r\n    if (window.location.hash) {\r\n      const { access_token, expires_in, token_type } =\r\n        getReturnedParamsFromSpotifyAuth(window.location.hash);\r\n\r\n      localStorage.setItem(\"accessToken\", access_token);\r\n      localStorage.setItem(\"tokenType\", token_type);\r\n      localStorage.setItem(\"expiresIn\", new Date().getTime() + ((expires_in - 300) * 1000))\r\n\r\n      console.log(window.origin)\r\n\r\n      window.location = \"https://malthemester.github.io/spotify-stat-viewer/\"\r\n    }\r\n  });\r\n\r\n  function handleAuth() {\r\n\r\n    let url = `${urlEndPoint}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`\r\n\r\n    window.location = url\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>You need to login to Spotify to view your stats</h1>\r\n      <button className=\"button-33\" onClick={() => handleAuth()} >Login to spotify</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthButton;\r\n","export default __webpack_public_path__ + \"static/media/Followers.1e8b3e63.png\";","import { useEffect, useState } from \"react\";\r\nimport followersImg from '../Followers.png'\r\nimport DisplayTop from '../components/Top';\r\n\r\nconst ENDPOINT_ME = \"https://api.spotify.com/v1/me\";\r\n\r\nfunction Stats() {\r\n    const [image, setImage] = useState(null)\r\n    const [userName, setUserName] = useState(\"Your username\")\r\n    const [followers, setFollowers] = useState(0)\r\n\r\n    console.log(\"go1\")\r\n\r\n    useEffect(() => {\r\n        let access_token = localStorage.getItem(\"accessToken\")\r\n        console.log(\"fetch\")\r\n        fetch(ENDPOINT_ME, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + access_token,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setUserName(data.display_name)\r\n                setFollowers(data.followers.total)\r\n                setImage(data.images[0].url)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"header\">\r\n                <img alt=\"userImg\" className=\"userImage\" src={image} />\r\n                <h1>{userName}</h1>\r\n                <img alt=\"follwerImg\" className=\"followerImage\" src={followersImg} />\r\n                <p className=\"followerText\">{followers}</p>\r\n            </div>\r\n\r\n            {/* <DisplayTop></DisplayTop> */}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Stats;\r\n","import { useEffect, useState } from 'react';\r\n// import { BrowserRouter as Router, Route, Routes, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Authenticate from './Pages/Authorization'\r\nimport DisplayStats from './Pages/DisplayStats'\r\n\r\nfunction App() {\r\n\r\n  const [accessTime, setaccessTime] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let expiresIn = new Date(Number(localStorage.getItem(\"expiresIn\")))\r\n    console.log(new Date() < expiresIn)\r\n    if (new Date() < expiresIn) {\r\n      setaccessTime(true)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n\r\n    <div>\r\n      {accessTime ? <DisplayStats /> : <Authenticate />}\r\n    </div>\r\n\r\n    // <Router>\r\n    //   <Routes>\r\n    //     <Route path='*' element={accessTime ? <DisplayStats /> : <Authenticate />} />\r\n    //   </Routes>\r\n    // </Router >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}