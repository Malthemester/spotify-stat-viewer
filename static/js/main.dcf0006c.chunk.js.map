{"version":3,"sources":["Pages/Authorization.js","Followers.png","components/Top.js","components/ShowTop.js","Pages/DisplayStats.js","App.js","reportWebVitals.js","index.js"],"names":["client_id","urlEndPoint","redirect_uri","SCOPES_URL_PARAM","join","AuthButton","console","log","useEffect","window","location","hash","substring","split","reduce","accumulater","currentValue","key","value","access_token","expires_in","token_type","localStorage","setItem","Date","getTime","origin","className","onClick","url","handleAuth","DisplayTop","timeRange","type","ShowTop","useState","topList","setTopList","fetchTop","getItem","ENDPOINT_TOP_TRACKS","fetch","headers","Authorization","then","response","json","data","items","forEach","track","i","paragrafs","col","artists","artist","name","push","alt","src","album","images","href","external_urls","spotify","target","rel","genres","div","style","contentProps","fillTop","catch","error","useSpring","to","next","cancel","a","color","y","delay","opacity","immediate","onChange","e","id","placeholder","Stats","image","setImage","userName","setUserName","followers","setFollowers","display_name","total","followersImg","App","accessTime","setaccessTime","expiresIn","Number","DisplayStats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcf0006c.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst client_id = `8388f4a4228342fa9111a25e71147bdd`\r\nconst urlEndPoint = 'https://accounts.spotify.com/authorize'\r\nconst redirect_uri = 'https://malthemester.github.io/spotify-stat-viewer/'\r\nconst SPACE_DELIMITER = \"%20\";\r\nconst SCOPES = [\"playlist-read-private\", \"user-read-private\", \"user-top-read\"];\r\nconst SCOPES_URL_PARAM = SCOPES.join(SPACE_DELIMITER);\r\n\r\nconst getReturnedParamsFromSpotifyAuth = (hash) => {\r\n  const stringAfterHashtag = hash.substring(1);\r\n  const paramsInUrl = stringAfterHashtag.split(\"&\");\r\n  const paramsSplitUp = paramsInUrl.reduce((accumulater, currentValue) => {\r\n    const [key, value] = currentValue.split(\"=\");\r\n    accumulater[key] = value;\r\n    return accumulater;\r\n  }, {});\r\n\r\n  return paramsSplitUp;\r\n};\r\n\r\nfunction AuthButton() {\r\n\r\n  console.log(`${urlEndPoint}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`)\r\n\r\n\r\n  useEffect(() => {\r\n    if (window.location.hash) {\r\n      const { access_token, expires_in, token_type } =\r\n        getReturnedParamsFromSpotifyAuth(window.location.hash);\r\n\r\n      localStorage.setItem(\"accessToken\", access_token);\r\n      localStorage.setItem(\"tokenType\", token_type);\r\n      localStorage.setItem(\"expiresIn\", new Date().getTime() + ((expires_in - 300) * 1000))\r\n\r\n      console.log(window.origin)\r\n\r\n      window.location = \"https://malthemester.github.io/spotify-stat-viewer/\"\r\n    }\r\n  });\r\n\r\n  function handleAuth() {\r\n\r\n    let url = `${urlEndPoint}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`\r\n\r\n    window.location = url\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>You need to login to Spotify to view your stats</h1>\r\n      <button className=\"button-33\" onClick={() => handleAuth()} >Login to spotify</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthButton;\r\n","export default __webpack_public_path__ + \"static/media/Followers.1e8b3e63.png\";","import { useState } from \"react/cjs/react.development\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nlet timeRange = 'long_term'\r\nlet type = 'tracks'\r\nfunction DisplayTop() {\r\n\r\n    console.log(\"go2\")\r\n\r\n    const [topList, setTopList] = useState(null)\r\n\r\n    const contentProps = useSpring({\r\n        to: async (next, cancel) => {\r\n            await next({ color: 'green', y: -0, delay: 0, opacity: 0, immediate: true })\r\n            await next({ y: -600, delay: 0, opacity: 0 })\r\n            await next({ y: -480, delay: 50, opacity: 1 })\r\n            await next({ y: -360, delay: 400 })\r\n            await next({ y: -240, delay: 400 })\r\n            await next({ y: -120, delay: 400 })\r\n            await next({ y: 0, delay: 400 })\r\n        }\r\n    })\r\n\r\n\r\n    let access_token = localStorage.getItem(\"accessToken\")\r\n\r\n    function handleChangeTimeRange(e) {\r\n        timeRange = e.target.value\r\n    }\r\n\r\n    function handleChangeType(e) {\r\n        type = e.target.value\r\n    }\r\n\r\n    function fetchTop() {\r\n        const ENDPOINT_TOP_TRACKS = `https://api.spotify.com/v1/me/top/${type}?limit=5&time_range=${timeRange}`;\r\n\r\n        fetch(ENDPOINT_TOP_TRACKS, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + access_token,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setTopList(fillTop(data))\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    function fillTop(data) {\r\n        let topList = []\r\n\r\n        if (type === 'tracks') {\r\n            data.items.forEach((track, i) => {\r\n\r\n                let paragrafs = []\r\n                let col = []\r\n                let artists = ''\r\n\r\n                track.artists.forEach((artist, i) => {\r\n                    artists += (i > 0 ? ', ' : '') + artist.name\r\n                })\r\n\r\n                col.push(<p className=\"topNumber\">{i + 1}</p>)\r\n\r\n                paragrafs.push(<p key={i}>{track.name}</p>)\r\n                paragrafs.push(<p key={'by' + i}>{artists}</p>)\r\n\r\n                col.push(<div key={'margin' + i} className=\"margin\" >{paragrafs}</div>)\r\n                col.push(<img alt=\"albumImg\" key={'tImage' + i} className=\"trackImage\" src={track.album.images[1].url} />)\r\n\r\n                topList.push(<a key={'a' + i} href={track.external_urls.spotify} target=\"_blank\" rel=\"noreferrer\" className=\"track\">{col}</a>)\r\n            })\r\n        }\r\n        else {\r\n            data.items.forEach((artist, i) => {\r\n\r\n                let paragrafs = []\r\n                let col = []\r\n                let genres = ''\r\n\r\n                artist.genres.forEach((artist, i) => {\r\n                    genres += (i > 0 ? ', ' : '') + artist\r\n                })\r\n\r\n                col.push(<p className=\"topNumber\">{i + 1}</p>)\r\n\r\n                paragrafs.push(<p key={i}>{artist.name}</p>)\r\n                paragrafs.push(<p key={'genres' + i}>{genres}</p>)\r\n\r\n                col.push(<div key={'margin' + i} className=\"margin\" >{paragrafs}</div>)\r\n                col.push(<img alt=\"artistImg\" key={'tImage' + i} className=\"trackImage\" src={artist.images[1].url} />)\r\n\r\n                topList.push(<a key={'a' + i} href={artist.external_urls.spotify} target=\"_blank\" rel=\"noreferrer\" className=\"track\">{col}</a>)\r\n            })\r\n        }\r\n\r\n        return (\r\n            <animated.div style={contentProps}>\r\n                {topList}\r\n            </animated.div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"selectText\">\r\n                <div className=\"line\">\r\n                    <p>Your's top\r\n                        <select onChange={handleChangeType} name=\"Time period\" id=\"time_period\" placeholder=\"Source Type\">\r\n                            <option value=\"tracks\">tracks</option>\r\n                            <option value=\"artists\">artists</option>\r\n                        </select> for a\r\n                        <select onChange={handleChangeTimeRange} name=\"Time period\" id=\"time_period\" placeholder=\"Source Type\">\r\n                            <option value=\"long_term\">long period</option>\r\n                            <option value=\"medium_term\">medium period</option>\r\n                            <option value=\"short_term\">short period</option>\r\n                        </select>\r\n                    </p>\r\n\r\n                    <button className=\"buttonStart\" onClick={() => {\r\n                        fetchTop()\r\n                    }}>Show</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={contentProps} className=\"maskTop\">\r\n                {topList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayTop","import { useState } from \"react\"\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nlet timeRange = 'long_term'\r\nlet type = 'tracks'\r\n\r\nfunction ShowTop() {\r\n\r\n    const [topList, setTopList] = useState(null)\r\n\r\n\r\n    function handleChangeTimeRange(e) {\r\n        timeRange = e.target.value\r\n    }\r\n\r\n    function handleChangeType(e) {\r\n        type = e.target.value\r\n    }\r\n\r\n    function fetchTop() {\r\n        let access_token = localStorage.getItem(\"accessToken\")\r\n\r\n        const ENDPOINT_TOP_TRACKS = `https://api.spotify.com/v1/me/top/${type}?limit=5&time_range=${timeRange}`;\r\n\r\n        fetch(ENDPOINT_TOP_TRACKS, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + access_token,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setTopList(fillTop(data))\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const contentProps = useSpring({\r\n        to: async (next, cancel) => {\r\n            await next({ color: 'green', y: -0, delay: 0, opacity: 0, immediate: true })\r\n            await next({ y: -600, delay: 0, opacity: 0 })\r\n            await next({ y: -480, delay: 50, opacity: 1 })\r\n            await next({ y: -360, delay: 400 })\r\n            await next({ y: -240, delay: 400 })\r\n            await next({ y: -120, delay: 400 })\r\n            await next({ y: 0, delay: 400 })\r\n        }\r\n    })\r\n\r\n    function fillTop(data) {\r\n        let topList = []\r\n\r\n        if (type === 'tracks') {\r\n            data.items.forEach((track, i) => {\r\n\r\n                let paragrafs = []\r\n                let col = []\r\n                let artists = ''\r\n\r\n                track.artists.forEach((artist, i) => {\r\n                    artists += (i > 0 ? ', ' : '') + artist.name\r\n                })\r\n\r\n                col.push(<p className=\"topNumber\">{i + 1}</p>)\r\n\r\n                paragrafs.push(<p key={i}>{track.name}</p>)\r\n                paragrafs.push(<p key={'by' + i}>{artists}</p>)\r\n\r\n                col.push(<div key={'margin' + i} className=\"margin\" >{paragrafs}</div>)\r\n                col.push(<img alt=\"albumImg\" key={'tImage' + i} className=\"trackImage\" src={track.album.images[1].url} />)\r\n\r\n                topList.push(<a key={'a' + i} href={track.external_urls.spotify} target=\"_blank\" rel=\"noreferrer\" className=\"track\">{col}</a>)\r\n            })\r\n        }\r\n        else {\r\n            data.items.forEach((artist, i) => {\r\n\r\n                let paragrafs = []\r\n                let col = []\r\n                let genres = ''\r\n\r\n                artist.genres.forEach((artist, i) => {\r\n                    genres += (i > 0 ? ', ' : '') + artist\r\n                })\r\n\r\n                col.push(<p className=\"topNumber\">{i + 1}</p>)\r\n\r\n                paragrafs.push(<p key={i}>{artist.name}</p>)\r\n                paragrafs.push(<p key={'genres' + i}>{genres}</p>)\r\n\r\n                col.push(<div key={'margin' + i} className=\"margin\" >{paragrafs}</div>)\r\n                col.push(<img alt=\"artistImg\" key={'tImage' + i} className=\"trackImage\" src={artist.images[1].url} />)\r\n\r\n                topList.push(<a key={'a' + i} href={artist.external_urls.spotify} target=\"_blank\" rel=\"noreferrer\" className=\"track\">{col}</a>)\r\n            })\r\n        }\r\n\r\n        return (\r\n            <animated.div style={contentProps}>\r\n                {topList}\r\n            </animated.div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"selectText\">\r\n                <div className=\"line\">\r\n                    <p>Your's top\r\n                        <select onChange={handleChangeType} name=\"Time period\" id=\"time_period\" placeholder=\"Source Type\">\r\n                            <option value=\"tracks\">tracks</option>\r\n                            <option value=\"artists\">artists</option>\r\n                        </select> for a\r\n                        <select onChange={handleChangeTimeRange} name=\"Time period\" id=\"time_period\" placeholder=\"Source Type\">\r\n                            <option value=\"long_term\">long period</option>\r\n                            <option value=\"medium_term\">medium period</option>\r\n                            <option value=\"short_term\">short period</option>\r\n                        </select>\r\n                    </p>\r\n\r\n                    <button className=\"buttonStart\" onClick={() => {\r\n                        fetchTop()\r\n                    }}>Show</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"maskTop\">\r\n                {topList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowTop;","import { useEffect, useState } from \"react\";\r\nimport followersImg from '../Followers.png'\r\nimport DisplayTop from '../components/Top';\r\nimport ShowTop from '../components/ShowTop'\r\n\r\nconst ENDPOINT_ME = \"https://api.spotify.com/v1/me\";\r\n\r\nfunction Stats() {\r\n    const [image, setImage] = useState(null)\r\n    const [userName, setUserName] = useState(\"Your username\")\r\n    const [followers, setFollowers] = useState(0)\r\n\r\n    console.log(\"go1\")\r\n\r\n    useEffect(() => {\r\n        let access_token = localStorage.getItem(\"accessToken\")\r\n        console.log(\"fetch\")\r\n        fetch(ENDPOINT_ME, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + access_token,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setUserName(data.display_name)\r\n                setFollowers(data.followers.total)\r\n                setImage(data.images[0].url)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"header\">\r\n                <img alt=\"userImg\" className=\"userImage\" src={image} />\r\n                <h1>{userName}</h1>\r\n                <img alt=\"follwerImg\" className=\"followerImage\" src={followersImg} />\r\n                <p className=\"followerText\">{followers}</p>\r\n            </div>\r\n\r\n            <ShowTop></ShowTop>\r\n            {/* <DisplayTop></DisplayTop> */}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Stats;\r\n","import { useEffect, useState } from 'react';\r\n// import { BrowserRouter as Router, Route, Routes, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Authenticate from './Pages/Authorization'\r\nimport DisplayStats from './Pages/DisplayStats'\r\n\r\nfunction App() {\r\n\r\n  const [accessTime, setaccessTime] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let expiresIn = new Date(Number(localStorage.getItem(\"expiresIn\")))\r\n    console.log(new Date() < expiresIn)\r\n    if (new Date() < expiresIn) {\r\n      setaccessTime(true)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n\r\n    <div>\r\n      {accessTime ? <DisplayStats /> : <Authenticate />}\r\n    </div>\r\n\r\n    // <Router>\r\n    //   <Routes>\r\n    //     <Route path='*' element={accessTime ? <DisplayStats /> : <Authenticate />} />\r\n    //   </Routes>\r\n    // </Router >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}