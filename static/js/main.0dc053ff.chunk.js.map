{"version":3,"sources":["Pages/Authorization.js","Followers.png","Pages/DisplayStats.js","App.js","reportWebVitals.js","index.js"],"names":["join","AuthButton","Stats","useState","image","setImage","userName","setUserName","followers","setFollowers","useEffect","access_token","localStorage","getItem","console","log","fetch","headers","Authorization","then","response","json","data","display_name","total","images","url","catch","error","className","src","followersImg","App","setaccessTime","expiresIn","Date","Number","DisplayStats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAMe,CAAC,wBAAyB,oBAAqB,iBAC9BA,KAFR,OAmDTC,ICxDA,MAA0B,sC,wBCgD1BC,MA1Cf,WACI,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,iBAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAwBA,OArBAC,qBAAU,WACN,IAAIC,EAAeC,aAAaC,QAAQ,eACxCC,QAAQC,IAAI,SACZC,MAXY,gCAWO,CACfC,QAAS,CACLC,cAAe,UAAYP,EAC3B,eAAgB,sBAGnBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFR,QAAQC,IAAIO,GACZf,EAAYe,EAAKC,cACjBd,EAAaa,EAAKd,UAAUgB,OAC5BnB,EAASiB,EAAKG,OAAO,GAAGC,QAE3BC,OAAM,SAACC,GACJd,QAAQC,IAAIa,QAErB,IAGC,8BACI,sBAAKC,UAAU,SAAf,UACI,qBAAKA,UAAU,YAAYC,IAAK1B,IAChC,6BAAKE,IACL,qBAAKuB,UAAU,gBAAgBC,IAAKC,IACpC,mBAAGF,UAAU,eAAb,SAA6BrB,UCJ9BwB,MA5Bf,WAEE,MAAoC7B,oBAAS,GAA7C,mBAAmB8B,GAAnB,WAUA,OARAvB,qBAAU,WACR,IAAIwB,EAAY,IAAIC,KAAKC,OAAOxB,aAAaC,QAAQ,eACrDC,QAAQC,IAAI,IAAIoB,KAASD,GACrB,IAAIC,KAASD,GACfD,GAAc,MAMhB,cAACI,EAAD,KCTWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0dc053ff.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst client_id = `8388f4a4228342fa9111a25e71147bdd`\r\nconst urlEndPoint = 'https://accounts.spotify.com/authorize'\r\nconst redirect_uri = 'https://malthemester.github.io/spotify-stat-viewer/'\r\nconst SPACE_DELIMITER = \"%20\";\r\nconst SCOPES = [\"playlist-read-private\", \"user-read-private\", \"user-top-read\"];\r\nconst SCOPES_URL_PARAM = SCOPES.join(SPACE_DELIMITER);\r\n\r\nconst getReturnedParamsFromSpotifyAuth = (hash) => {\r\n  const stringAfterHashtag = hash.substring(1);\r\n  const paramsInUrl = stringAfterHashtag.split(\"&\");\r\n  const paramsSplitUp = paramsInUrl.reduce((accumulater, currentValue) => {\r\n    const [key, value] = currentValue.split(\"=\");\r\n    accumulater[key] = value;\r\n    return accumulater;\r\n  }, {});\r\n\r\n  return paramsSplitUp;\r\n};\r\n\r\nfunction AuthButton() {\r\n\r\n  console.log(`${urlEndPoint}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`)\r\n\r\n\r\n  useEffect(() => {\r\n    if (window.location.hash) {\r\n      const { access_token, expires_in, token_type } =\r\n        getReturnedParamsFromSpotifyAuth(window.location.hash);\r\n\r\n      localStorage.setItem(\"accessToken\", access_token);\r\n      localStorage.setItem(\"tokenType\", token_type);\r\n      localStorage.setItem(\"expiresIn\", new Date().getTime() + ((expires_in - 300) * 1000))\r\n\r\n      console.log(window.origin)\r\n\r\n      window.location = \"https://malthemester.github.io/spotify-stat-viewer/\"\r\n    }\r\n  });\r\n\r\n  function handleAuth() {\r\n\r\n    let url = `${urlEndPoint}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${SCOPES_URL_PARAM}&response_type=token&show_dialog=true`\r\n\r\n    window.location = url\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>You need to login to Spotify to view your stats</h1>\r\n      <button className=\"button-33\" onClick={() => handleAuth()} >Login to spotify</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthButton;\r\n","export default __webpack_public_path__ + \"static/media/Followers.1e8b3e63.png\";","import { useEffect, useState } from \"react\";\r\nimport followersImg from '../Followers.png'\r\nimport DisplayTop from \"../components/Top\";\r\n\r\nconst ENDPOINT_ME = \"https://api.spotify.com/v1/me\";\r\n\r\nfunction Stats() {\r\n    const [image, setImage] = useState(null)\r\n    const [userName, setUserName] = useState(\"Your username\")\r\n    const [followers, setFollowers] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        let access_token = localStorage.getItem(\"accessToken\")\r\n        console.log(\"fetch\")\r\n        fetch(ENDPOINT_ME, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + access_token,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setUserName(data.display_name)\r\n                setFollowers(data.followers.total)\r\n                setImage(data.images[0].url)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"header\">\r\n                <img className=\"userImage\" src={image} />\r\n                <h1>{userName}</h1>\r\n                <img className=\"followerImage\" src={followersImg} />\r\n                <p className=\"followerText\">{followers}</p>\r\n            </div>\r\n\r\n            {/* <DisplayTop></DisplayTop> */}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Stats;\r\n","import { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Authenticate from './Pages/Authorization'\r\nimport DisplayStats from './Pages/DisplayStats'\r\n\r\nfunction App() {\r\n\r\n  const [accessTime, setaccessTime] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let expiresIn = new Date(Number(localStorage.getItem(\"expiresIn\")))\r\n    console.log(new Date() < expiresIn)\r\n    if (new Date() < expiresIn) {\r\n      setaccessTime(true)\r\n    }\r\n  })\r\n\r\n  return (\r\n\r\n    <DisplayStats />\r\n\r\n    // <div>\r\n    //   {accessTime ? <DisplayStats /> : <Authenticate />}\r\n    // </div>\r\n\r\n    // <Router>\r\n    //   <Routes>\r\n    //     <Route path='*' element={accessTime ? <DisplayStats /> : <Authenticate />} />\r\n    //   </Routes>\r\n    // </Router >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}